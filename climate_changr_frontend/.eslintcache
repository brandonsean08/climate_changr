[{"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/index.js":"1","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/App.js":"2","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/reduxStore.js":"3","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/reducers/rootReducer.js":"4","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/actions/api/climateData.js":"5","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/actions/redux/climateData.js":"6","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/components/Header/Header.js":"7","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/components/HeaderItems/HeaderItems.js":"8","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/components/Charts/BarChart/BarChart.js":"9","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/components/CountrySelector/CountryDropdownSelector.js":"10","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/actions/api/countryData.js":"11","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/actions/redux/countrySelector.js":"12","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/components/NavTabs/NavTabs.js":"13","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/actions/redux/navTabs.js":"14","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/components/NavTabs/TabDescriptions.js":"15"},{"size":521,"mtime":1607529491507,"results":"16","hashOfConfig":"17"},{"size":1402,"mtime":1607617008652,"results":"18","hashOfConfig":"17"},{"size":310,"mtime":1607615099222,"results":"19","hashOfConfig":"17"},{"size":1174,"mtime":1607623105780,"results":"20","hashOfConfig":"17"},{"size":758,"mtime":1607595462355,"results":"21","hashOfConfig":"17"},{"size":183,"mtime":1607614622369,"results":"22","hashOfConfig":"17"},{"size":749,"mtime":1607614756516,"results":"23","hashOfConfig":"17"},{"size":913,"mtime":1607617155154,"results":"24","hashOfConfig":"17"},{"size":9849,"mtime":1607619206474,"results":"25","hashOfConfig":"17"},{"size":2876,"mtime":1607614715199,"results":"26","hashOfConfig":"17"},{"size":338,"mtime":1607600429847,"results":"27","hashOfConfig":"17"},{"size":106,"mtime":1607614641838,"results":"28","hashOfConfig":"17"},{"size":2410,"mtime":1607614857525,"results":"29","hashOfConfig":"17"},{"size":101,"mtime":1607614660457,"results":"30","hashOfConfig":"17"},{"size":720,"mtime":1607616998728,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"169s38x",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/index.js",["68","69"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// bootstrap related imports\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./reduxStore\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["70","71"],"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/App.js",[],"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/reduxStore.js",[],"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/reducers/rootReducer.js",[],"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/actions/api/climateData.js",[],"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/actions/redux/climateData.js",[],["72","73"],"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/components/Header/Header.js",["74"],"import { React } from \"react\";\nimport \"./Header.css\";\nimport HeaderItems from \"../HeaderItems/HeaderItems\";\n\nfunction Header () {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark\">\n        <a\n          className=\"navbar-brand\"\n          href=\"#\"\n        >\n          Climate Changr\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <HeaderItems/>\n      </nav>\n    );\n}\n\nexport default Header;\n","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/components/HeaderItems/HeaderItems.js",["75","76","77"],"import React from \"react\";\nimport \"./HeaderItems.css\";\n\nfunction HeaderItems() {\n  return (\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav mr-auto\">\n        <li className=\"nav-item dropdown\">\n          <a\n            className=\"nav-link dropdown-toggle\"\n            href=\"#\"\n            id=\"navbarDropdown\"\n            role=\"button\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            View Type\n          </a>\n          <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n            <a className=\"dropdown-item\">Country</a>\n            <div className=\"dropdown-divider\"></div>\n            <a className=\"dropdown-item\">Month</a>\n          </div>\n        </li>\n      </ul>\n      <div className=\"header-btn-group\"></div>\n    </div>\n  );\n}\n\nexport default HeaderItems;\n","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/components/Charts/BarChart/BarChart.js",["78","79","80"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  getAllActualClimateData,\n  getAllPredictedClimateData,\n} from \"../../../actions/api/climateData\";\n\n/**\n * Function to construct the data object required for the chart to render the bars for the actual and predicted data.\n * @param {String} selectedCountry The country that the user wants to view data for\n * @param {Array} actualData The actual temperature data\n * @param {Array} predictedData The predicted temperature data\n */\nfunction constructActualvsPredictedDatasets(\n  selectedCountry,\n  actualData,\n  predictedData\n) {\n  let indexOfCountryActual = actualData.findIndex(\n    (country) => country.country.name === selectedCountry\n  );\n  let indexOfCountryPredicted = predictedData.findIndex(\n    (country) => country.country.name === selectedCountry\n  );\n  return {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ],\n    datasets: [\n      {\n        label: \"Actual Temp\",\n        backgroundColor: \"#89308E\",\n        borderColor: \"#89308E\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"#89308E\",\n        hoverBorderColor: \"#89308E\",\n        data: [\n          predictedData[indexOfCountryPredicted].country.temperatures.averages\n            .January,\n          predictedData[indexOfCountryPredicted].country.temperatures.averages\n            .February,\n          predictedData[indexOfCountryPredicted].country.temperatures.averages\n            .March,\n          predictedData[indexOfCountryPredicted].country.temperatures.averages\n            .April,\n          predictedData[indexOfCountryPredicted].country.temperatures.averages\n            .May,\n          predictedData[indexOfCountryPredicted].country.temperatures.averages\n            .June,\n          predictedData[indexOfCountryPredicted].country.temperatures.averages\n            .July,\n          predictedData[indexOfCountryPredicted].country.temperatures.averages\n            .August,\n          predictedData[indexOfCountryPredicted].country.temperatures.averages\n            .September,\n          predictedData[indexOfCountryPredicted].country.temperatures.averages\n            .October,\n          predictedData[indexOfCountryPredicted].country.temperatures.averages\n            .November,\n          predictedData[indexOfCountryPredicted].country.temperatures.averages\n            .December,\n        ],\n      },\n      {\n        label: \"Predicted Temp\",\n        backgroundColor: \"#EA1196\",\n        borderColor: \"#EA1196\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"#EA1196\",\n        hoverBorderColor: \"#EA1196\",\n        data: [\n          actualData[indexOfCountryActual].country.temperatures.averages\n            .January,\n          actualData[indexOfCountryActual].country.temperatures.averages\n            .February,\n          actualData[indexOfCountryActual].country.temperatures.averages.March,\n          actualData[indexOfCountryActual].country.temperatures.averages.April,\n          actualData[indexOfCountryActual].country.temperatures.averages.May,\n          actualData[indexOfCountryActual].country.temperatures.averages.June,\n          actualData[indexOfCountryActual].country.temperatures.averages.July,\n          actualData[indexOfCountryActual].country.temperatures.averages.August,\n          actualData[indexOfCountryActual].country.temperatures.averages\n            .September,\n          actualData[indexOfCountryActual].country.temperatures.averages\n            .October,\n          actualData[indexOfCountryActual].country.temperatures.averages\n            .November,\n          actualData[indexOfCountryActual].country.temperatures.averages\n            .December,\n        ],\n      },\n    ],\n  };\n}\n\n/**\n * A Fucntion to calculate the yearly average for a country (dataItem) given its monthly averages\n * @param {object} dataItem The dataItem that we want to calculate the yearly avergae for\n */\nfunction calculateYearlyAverage(dataItem) {\n  let sum = 0;\n\n  sum += dataItem[0].country.temperatures.averages.January;\n  sum += dataItem[0].country.temperatures.averages.February;\n  sum += dataItem[0].country.temperatures.averages.March;\n  sum += dataItem[0].country.temperatures.averages.April;\n  sum += dataItem[0].country.temperatures.averages.May;\n  sum += dataItem[0].country.temperatures.averages.June;\n  sum += dataItem[0].country.temperatures.averages.July;\n  sum += dataItem[0].country.temperatures.averages.August;\n  sum += dataItem[0].country.temperatures.averages.September;\n  sum += dataItem[0].country.temperatures.averages.October;\n  sum += dataItem[0].country.temperatures.averages.November;\n  sum += dataItem[0].country.temperatures.averages.December;\n\n  return parseFloat((sum/12).toFixed(2))\n}\n\n/**\n * Function to construct the json object needed by the Bar Chart to display the difference in temperatures\n * @param {array} actualData The actual monthly temperature data\n * @param {array} predictedData The predicted Monthly temperature data\n */\nfunction constructTemperatureDifferenceDatasets(actualData, predictedData) {\n  let barChartLabels = [];\n\n  actualData.map((country) => {\n    barChartLabels.push(country.country.name);\n  });\n\n  let barChartData = [];\n\n  barChartLabels.map((country) => {\n    const predictedDataItem = predictedData.filter((predictedDataCountry) => {\n      return predictedDataCountry.country.name === country;\n    });\n    const actualDataItem = actualData.filter((actualDataCountry) => {\n      return actualDataCountry.country.name === country;\n    });\n    if (actualDataItem.length !== 0 && predictedDataItem.length !== 0) {\n      let predictedDataItemYearlyAverage = calculateYearlyAverage(predictedDataItem);\n      let actualDataItemYearlyAverage = calculateYearlyAverage(actualDataItem);\n      const differenceInTemp = parseFloat((actualDataItemYearlyAverage - predictedDataItemYearlyAverage).toFixed(2));\n\n      barChartData.push({\n        country: country,\n        difference: differenceInTemp,\n      });\n    }\n  });\n\n  // Sort the Country data from largest to smallest\n  barChartData.sort(function (a, b) {\n    return b.difference - a.difference;\n  });\n\n  let sortedLabels = [];\n  let sortedValues = [];\n\n  barChartData.map((country) => {\n    sortedLabels.push(country.country);\n    sortedValues.push(country.difference);\n  });\n\n  return {\n    labels: sortedLabels,\n    datasets: [\n      {\n        label: \"Difference In Temp\",\n        backgroundColor: \"#98F5E8\",\n        borderColor: \"#98F5E8\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"#98F5E8\",\n        hoverBorderColor: \"#98F5E8\",\n        data: sortedValues,\n      },\n    ],\n  };\n}\n\nclass BarChart extends Component {\n  /**\n   * The state object that will hold the state for the Bar Chart Component.\n   */\n  state = {\n    selectedCountry: this.props.selectedCountry,\n    activeTab: this.props.activeTab,\n    actualClimateData: [],\n    predictedClimateData: [],\n    barChartDataSets: [],\n    barChartOptions: {\n      responsive: true,\n      legend: {\n        display: true,\n      },\n      type: \"bar\",\n    },\n  };\n\n  /**\n   * Fetching all of the Actual Data nad Predicted then constructing the datasets required for the Bar Chart.\n   */\n  componentDidMount() {\n    getAllActualClimateData().then((data) => {\n      this.setState({\n        actualClimateData: data,\n      });\n      getAllPredictedClimateData().then((data) => {\n        this.setState({\n          predictedClimateData: data,\n        });\n        this.setState({\n          barChartDataSets: constructActualvsPredictedDatasets(\n            this.state.selectedCountry,\n            this.state.actualClimateData,\n            this.state.predictedClimateData\n          ),\n        });\n      });\n    });\n  }\n\n  /**\n   * Listening for a redux store change in the props\n   * @param {object} nextProps\n   */\n  componentWillReceiveProps(nextProps) {\n    if (\n      this.props.selectedCountry.countryName !==\n      nextProps.selectedCountry.countryName\n    ) {\n      this.setState({\n        selectedCountry: nextProps.selectedCountry.countryName,\n        barChartDataSets: constructActualvsPredictedDatasets(\n          nextProps.selectedCountry.countryName,\n          this.state.actualClimateData,\n          this.state.predictedClimateData\n        ),\n      });\n    }\n    if (this.props.activeTab !== nextProps.activeTab) {\n      if (nextProps.activeTab === \"ActualvsPredicted\") {\n        console.log(this.state);\n        this.setState({\n          selectedCountry: this.state.selectedCountry,\n          barChartDataSets: constructActualvsPredictedDatasets(\n            this.state.selectedCountry,\n            this.state.actualClimateData,\n            this.state.predictedClimateData\n          ),\n        });\n      } else if (nextProps.activeTab === \"Change\") {\n        console.log(this.state);\n        this.setState({\n          activeTab: nextProps.activeTab,\n          barChartDataSets: constructTemperatureDifferenceDatasets(\n            this.state.actualClimateData,\n            this.state.predictedClimateData\n          ),\n        });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"bar-chart-container\">\n        <Bar\n          data={this.state.barChartDataSets}\n          options={this.state.barChartOptions}\n        />\n      </div>\n    );\n  }\n}\n\n/**\n * Function to map the central state from our redux store to the props of our Bar Chart Component\n * @param {object} state The state object from our redux store\n * @returns {object} The props for our Bar Chart Component\n */\nconst mapStateToProps = (state) => {\n  return {\n    actualClimateData: state.actualClimateData,\n    selectedCountry: state.selectedCountry,\n    activeTab: state.activeTab,\n  };\n};\n\nexport default connect(mapStateToProps)(BarChart);\n","/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/components/CountrySelector/CountryDropdownSelector.js",[],"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/actions/api/countryData.js",[],"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/actions/redux/countrySelector.js",[],"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/components/NavTabs/NavTabs.js",[],"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/actions/redux/navTabs.js",[],"/Users/brandon.coetzee/OneDrive - insidemedia.net/Development/Personal/climate_changr/climate_changr_frontend/src/components/NavTabs/TabDescriptions.js",[],{"ruleId":"81","severity":1,"message":"82","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":9},{"ruleId":"81","severity":1,"message":"85","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":14},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"86","replacedBy":"90"},{"ruleId":"88","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":8,"column":9,"nodeType":"94","endLine":11,"endColumn":10},{"ruleId":"92","severity":1,"message":"93","line":9,"column":11,"nodeType":"94","endLine":17,"endColumn":12},{"ruleId":"92","severity":1,"message":"95","line":21,"column":13,"nodeType":"94","endLine":21,"endColumn":42},{"ruleId":"92","severity":1,"message":"95","line":23,"column":13,"nodeType":"94","endLine":23,"endColumn":42},{"ruleId":"96","severity":1,"message":"97","line":139,"column":28,"nodeType":"98","messageId":"99","endLine":139,"endColumn":30},{"ruleId":"96","severity":1,"message":"97","line":145,"column":32,"nodeType":"98","messageId":"99","endLine":145,"endColumn":34},{"ruleId":"96","severity":1,"message":"97","line":172,"column":30,"nodeType":"98","messageId":"99","endLine":172,"endColumn":32},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["100"],"no-negated-in-lhs",["101"],["100"],["101"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]